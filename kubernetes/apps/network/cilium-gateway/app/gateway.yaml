---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/gateway.networking.k8s.io/gateway_v1.json
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: internal-gateway-cilium
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    external-dns.alpha.kubernetes.io/target: &hostname internal.${SECRET_DOMAIN}
spec:
  addresses:
  - type: IPAddress
    value: ${INTERNAL_GATEWAY_VIP}
  gatewayClassName: cilium
  infrastructure:
    annotations:
      external-dns.alpha.kubernetes.io/hostname: *hostname
  listeners:
    - name: https
      protocol: HTTPS
      hostname: "*.${SECRET_DOMAIN}"
      port: 443
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: "${SECRET_DOMAIN/./-}-production-tls"
    - name: http
      protocol: HTTP
      port: 80
      hostname: "*.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: Same
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/gateway.networking.k8s.io/gateway_v1.json
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: external-gateway-cilium
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    external-dns.alpha.kubernetes.io/target: &hostname external.${SECRET_DOMAIN}
spec:
  addresses:
  - type: IPAddress
    value: ${EXTERNAL_GATEWAY_VIP}
  gatewayClassName: cilium
  infrastructure:
    annotations:
      external-dns.alpha.kubernetes.io/hostname: *hostname
  listeners:
    - name: https
      protocol: HTTPS
      hostname: "*.${SECRET_DOMAIN}"
      port: 443
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: "${SECRET_DOMAIN/./-}-production-tls"
    - name: http
      protocol: HTTP
      port: 80
      hostname: "*.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: Same
